#version 420
layout(triangles, equal_spacing, ccw) in;

in TCS_OUT {
    vec2 position;
    vec2 velocity;
    float pressure;
} tes_in[];

out TES_OUT {
    vec3 barycentric;
    flat vec2 velocities[6];
    flat float pressures[6];
} tes_out;

void main(void)
{
    float x = gl_TessCoord.x;
    float y = gl_TessCoord.y;
    float z = gl_TessCoord.z;
    tes_out.barycentric = vec3(x,y,z);
    // Pass all the solution data for this patch to the fragment shader.
    for (int i = 0; i < 6; i++) {
        tes_out.velocities[i] = tes_in[i].velocity;
        tes_out.pressures[i] = tes_in[i].pressure;
    }
    gl_Position = vec4(z*tes_in[0].position + x*tes_in[2].position + y*tes_in[4].position, 0,1);
}

